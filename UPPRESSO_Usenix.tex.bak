

\documentclass[letterpaper,twocolumn,10pt]{article}
\usepackage{usenix-2020-09}

% to be able to draw some self-contained figs
\usepackage{tikz}
\usepackage{amsmath}

% inlined bib file
\usepackage{filecontents}


\usepackage[small,compact]{titlesec}

\usepackage{lipsum,mwe,cuted}
\usepackage{float}%%%%提供浮动体的[H]选项，进而取消浮动
\usepackage{caption}%%提供\captionof命令


\pagestyle{plain}


\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{caption}
%

%\usepackage{algpseudocode}
\usepackage{amsmath,amssymb,amsthm}

\usepackage{graphicx}
%\usepackage{geometry}
%\usepackage{subfigure}
\usepackage{url}
\usepackage{multirow}
\usepackage{listings}
\usepackage{cite}
\usepackage{array}
\usepackage{enumerate}
\usepackage{booktabs}
\usepackage{amsthm}
\usepackage{color}
\usepackage{soul}
\usepackage{multicol}
%\usepackage{algcompatible}
%\usepackage[compatible]{algpseudocode}

\usepackage[algo2e]{algorithm2e}
\usepackage{algorithm}
\usepackage{algorithmic}


\newtheorem{theorem}{Theorem}
\newtheorem{corollary}{Corollary}
\theoremstyle{definition}
\newtheorem{definition}{Definition}
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{lemma}{Lemma}


\makeatletter
\newenvironment{breakablealgorithm}
  {% \begin{breakablealgorithm}
   \begin{center}
     \refstepcounter{algorithm}% New algorithm
     \hrule height.8pt depth0pt \kern2pt% \@fs@pre for \@fs@ruled
     \renewcommand{\caption}[2][\relax]{% Make a new \caption
       {\raggedright\textbf{\ALG@name~\thealgorithm} ##2\par}%
       \ifx\relax##1\relax % #1 is \relax
         \addcontentsline{loa}{algorithm}{\protect\numberline{\thealgorithm}##2}%
       \else % #1 is not \relax
         \addcontentsline{loa}{algorithm}{\protect\numberline{\thealgorithm}##1}%
       \fi
       \kern2pt\hrule\kern2pt
     }
  }{% \end{breakablealgorithm}
     \kern2pt\hrule\relax% \@fs@post for \@fs@ruled
   \end{center}
  }
\makeatother





















% correct bad hyphenation here
\hyphenation{op-tical net-works semi-conduc-tor}

\begin{document}

\pagenumbering{arabic}
\title{{UPPRESSO}: Untraceable and Unlinkable Privacy-PREserving\\Single Sign-On Services}
\maketitle
\begin{abstract}
%As widely-adopted identity management and authentication solutions in the Internet, 
Single sign-on (SSO) allows a user to maintain only the credential at the identity provider (IdP), instead of one credential for each relying party (RP),
    to sign onto a number of RPs.
% which shifts the burden of user authentication from RPs to the IdP.
However, SSO introduces extra privacy leakage threats, compared with traditional authentication protocols,
 because (\emph{a}) the IdP could track all the RPs a user is visiting,
 and (\emph{b}) collusive RPs could learn a user's online profile by linking his identities across these RPs.
Several privacy-preserving SSO solutions have been proposed to defend against either the curious IdP or collusive RPs,
 but none of them addresses both of these privacy leakage threats at the same time.

In this paper, we propose a privacy-preserving SSO system, called \emph{UPPRESSO},
 to protect a user's sign-on traces against both the curious IdP and collusive RPs simultaneously.
We analyze the identity dilemma between the SSO security requirements and the privacy concerns,
    and convert the SSO privacy problems into an identity-transformation challenge.
In each sign-on session of UPPRESSO,
    an \emph{ephemeral pseudo-identity} (denoted as $PID_{RP}$) of the RP, onto which the user is signing,
        is first negotiated between the RP and the user.
Then,
    $PID_{RP}$ is sent to the IdP and designated in the identity proof,
        so that the IdP is not aware of the visited RP.
Meanwhile,
    $PID_{RP}$ is used by the IdP to transform the \emph{permanent user identity} $ID_U$
        into an \emph{ephemeral pseudo-identity} (denoted as $PID_U$)
        in the identity proof.
%Then, we design a novel {\em transformed RP designation} scheme to transform the identifier of the RP, to which the user requests to log in, into a privacy-preserving pseudo-identity ($PID_{RP}$) through the cooperation between the user and the RP.
On receiving the identity proof,
    the RP transforms $PID_U$ into a \emph{permanent account} (denoted as $ACCT$) of the user, by a trapdoor which is calculated in the negotiation.
%Our {\em trapdoor user identification} scheme allows the RP to obtain a trapdoor from the transformation process and use it to derive a permanent account of the user at that RP from his privacy-preserving pseudo-identity ($PID_U$) generated by the IdP.
For a certain user, the account at each RP is unique and different from $ID_U$,
    so collusive RPs cannot link his identities across multiple RPs.
To the best of our knowledge,
    this is the first SSO solution which solves the privacy problems caused by the curious IdP and collusive RPs.

We build the UPPRESSO prototype system,
    with two standard functions of OpenID Connect 1.0:
     the function of RP Dynamic Registration is used to support the ephemeral $PID_{RP}$,
     while the function of Core Sign-On is slightly improved to calculate $PID_U$ and $ACCT$.
The prototype system is implemented on top of open-source MITREid Connect,
    and the evaluation shows that UPPRESSO introduces reasonable overheads
        and fulfills the requirements of both security and privacy. 


%The sign-on process of UPPRESSO follows the service pattern of OpenID Connect (OIDC) with minimum modifications, and UPPRESSO is platform-independent. Our analysis shows that UPPRESSO provides comprehensive privacy protection while achieving the same security guarantees as OIDC.
\end{abstract}

%\begin{IEEEkeywords}
%Single sign-on, security, privacy. %, trace, linkage
%\end{IEEEkeywords}














\input{chap_Compact/introduction.tex}
\input{chap_Compact/background.tex}
\input{chap_Compact/challenges.tex}
\input{chap_Compact/threatmodel.tex}
\input{chap_Compact/protocol.tex}
%\input{chap_Compact/privacy.tex}
\input{chap_Compact/webmodel.tex}
\input{chap_Compact/analysis.tex}
\input{chap_Compact/implementation.tex}
\input{chap_Compact/evaluation.tex}
\input{chap_Compact/discussion.tex}
\input{chap_Compact/relatedwork.tex}
\input{chap_Compact/conclusion.tex}


\bibliographystyle{IEEEbib}
\bibliography{ref}

\input{chap_Compact/appendix.tex}


% that's all folks
\end{document}


